name: Security Scan

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  schedule:
    - cron: '0 8 * * 1'  # Weekly on Monday at 8 AM

permissions:
  contents: read
  security-events: write

jobs:
  bandit:
    name: Python Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install Bandit
        run: pip install bandit[toml]
      
      - name: Run Bandit
        run: |
          bandit -r . -f json -o bandit-report.json \
            -c audit/configs/bandit.yaml || true
      
      - name: Upload Bandit Results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: bandit-report.sarif
      
      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const report = JSON.parse(fs.readFileSync('bandit-report.json', 'utf8'));
            const comment = `## ðŸ”’ Security Scan Results
            
            **Total Issues Found:** ${report.results.length}
            **High Severity:** ${report.results.filter(r => r.issue_severity === 'HIGH').length}
            **Medium Severity:** ${report.results.filter(r => r.issue_severity === 'MEDIUM').length}
            **Low Severity:** ${report.results.filter(r => r.issue_severity === 'LOW').length}`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  safety:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install Safety
        run: pip install safety
      
      - name: Run Safety Check
        run: |
          pip install -r requirements.txt
          safety check --json --output safety-report.json || true
      
      - name: Parse Safety Results
        id: safety-results
        run: |
          python -c "
          import json
          with open('safety-report.json', 'r') as f:
              report = json.load(f)
          vulnerabilities = len(report.get('vulnerabilities', []))
          print(f'::set-output name=count::{vulnerabilities}')
          if vulnerabilities > 0:
              print('::error::Found {vulnerabilities} vulnerabilities in dependencies')
          "

  secret-scan:
    name: Secret Detection
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      
      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified